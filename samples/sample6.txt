In computing, the 
Internet Message Access Protocol
 (
IMAP
) is an 
Internet standard
 
protocol
 used by 
email clients
 to retrieve 
email
 messages from a 
mail server
 over a 
TCP/IP
 connection.
[1]
 IMAP is defined by 
RFC 3501
.

IMAP was designed with the goal of permitting complete management of an 
email box
 by multiple email clients, therefore clients generally leave messages on the server until the user explicitly deletes them. An IMAP server typically listens on 
port number
 143. IMAP over 
SSL
 (
IMAPS
) is assigned the port number 993.

Virtually all modern e-mail clients and 
servers
 support IMAP, which along with the earlier 
POP3
 (Post Office Protocol) are the two most prevalent standard protocols for email retrieval.
[2]
 Many 
webmail
 service providers such as 
Gmail
, 
Outlook.com
 and 
Yahoo! Mail
 also provide support for both IMAP and POP3.

The Internet Message Access Protocol is an 
Application Layer
 Internet protocol that allows an 
e-mail client
 to access 
e-mail
 on a remote 
mail server
.  The current version is defined by 
RFC 3501
. An IMAP server typically listens on 
well-known port
 143, while IMAP over 
SSL
 (IMAPS) uses 993.

Incoming e-mail messages are sent to an e-mail server that stores messages in the recipient's e-mail box. The user retrieves the messages with an e-mail client that uses one of a number of e-mail retrieval protocols. While some clients and servers preferentially use vendor-specific, 
proprietary protocols
,
[3]
 almost all support POP and IMAP for retrieving e-mail - allowing many free choice between many 
e-mail clients
 such as 
Pegasus Mail
 or 
Mozilla Thunderbird
 to access these servers, and allows the clients to be used with 
other servers
.

E-mail clients using IMAP generally leave messages on the server until the user explicitly deletes them. This and other characteristics of IMAP operation allow multiple clients to manage the same mailbox. Most e-mail 
clients
 support IMAP in addition to 
Post Office Protocol (POP)
 to retrieve messages.
[4]
 IMAP offers access to the mail storage. Clients may store local copies of the messages, but these are considered to be a temporary cache.

IMAP was designed by 
Mark Crispin
 in 1986 as a remote access mailbox protocol, in contrast to the widely used POP, a protocol for simply retrieving the contents of a mailbox.

It went through a number of iterations before the current VERSION 4rev1 (IMAP4), as detailed below:

The original 
Interim Mail Access Protocol
 was implemented as a 
Xerox
 
Lisp machine
 client and a 
TOPS-20
 server.

No copies of the original interim protocol specification or its software exist.
[5]
[6]
 Although some of its commands and responses were similar to IMAP2, the interim protocol lacked command/response tagging and thus its syntax was incompatible with all other versions of IMAP.

The interim protocol was quickly replaced by the 
Interactive Mail Access Protocol
 (IMAP2), defined in 
RFC 1064
 (in 1988) and later updated by 
RFC 1176
 (in 1990). IMAP2 introduced the command/response tagging and was the first publicly distributed version.

IMAP3 is an extremely rare variant of IMAP.
[7]
 It was published as 
RFC 1203
 in 1991. It was written specifically as a counter proposal to 
RFC 1176
, which itself proposed modifications to IMAP2.
[8]
 IMAP3 was never accepted by the marketplace.
[9]
[10]
 The 
IESG
 reclassified RFC1203 "Interactive Mail Access Protocol - Version 3" as a Historic protocol in 1993. The IMAP Working Group used RFC1176 (IMAP2) rather than RFC1203 (IMAP3) as its starting point.
[11]
[12]


With the advent of 
MIME
, IMAP2 was extended to support MIME body structures and add mailbox management functionality (create, delete, rename, message upload) that was absent from IMAP2. This experimental revision was called IMAP2bis; its specification was never published in non-draft form. An internet draft of IMAP2bis was published by the IETF IMAP Working Group in October 1993. This draft was based upon the following earlier specifications: unpublished 
IMAP2bis.TXT
 document, RFC1176, and RFC1064 (IMAP2).
[13]
 The 
IMAP2bis.TXT
 draft documented the state of extensions to IMAP2 as of December 1992.
[14]
 Early versions of 
Pine
 were widely distributed with IMAP2bis support
[7]
 (Pine 4.00 and later supports IMAP4rev1).

An IMAP Working Group formed in the 
IETF
 in the early 1990s took over responsibility for the IMAP2bis design. The IMAP WG decided to rename IMAP2bis to IMAP4 to avoid confusion.

When using POP, clients typically connect to the e-mail server briefly, only as long as it takes to download new messages. When using IMAP4, clients often stay connected as long as the user interface is active and download message content on demand. For users with many or large messages, this IMAP4 usage pattern can result in faster response times.

The POP protocol requires the currently connected client to be the only client connected to the mailbox. In contrast, the IMAP protocol specifically allows simultaneous access by multiple clients and provides mechanisms for clients to detect changes made to the mailbox by other, concurrently connected, clients. See for example RFC3501 section 5.2 which specifically cites "simultaneous access to the same mailbox by multiple agents" as an example.

Usually all Internet e-mail is transmitted in 
MIME
 format, allowing messages to have a 
tree structure
 where the leaf nodes are any of a variety of single part content types and the non-leaf nodes are any of a variety of multipart types. The IMAP4 protocol allows clients to retrieve any of the individual MIME parts separately and also to retrieve portions of either individual parts or the entire message. These mechanisms allow clients to retrieve the text portion of a message without retrieving attached files or to 
stream
 content as it is being fetched.

Through the use of flags defined in the IMAP4 protocol, clients can keep track of message state: for example, whether or not the message has been read, replied to, or deleted. These flags are stored on the server, so different clients accessing the same mailbox at different times can detect state changes made by other clients. POP provides no mechanism for clients to store such state information on the server so if a single user accesses a mailbox with two different POP clients (at different times), state information—such as whether a message has been accessed—cannot be synchronized between the clients. The IMAP4 protocol supports both predefined system flags and client-defined keywords. System flags indicate state information such as whether a message has been read. Keywords, which are not supported by all IMAP servers, allow messages to be given one or more 
tags
 whose meaning is up to the client. IMAP keywords should not be confused with proprietary labels of 
web-based e-mail
 services which are sometimes translated into IMAP folders by the corresponding proprietary servers.

IMAP4 clients can create, rename, and/or delete mailboxes (usually presented to the user as folders) on the server, and copy messages between mailboxes. Multiple mailbox support also allows servers to provide access to shared and public folders. The 
IMAP4 Access Control List (ACL) Extension
 (
RFC 4314
) may be used to regulate access rights.

IMAP4 provides a mechanism for a client to ask the server to search for messages meeting a variety of criteria. This mechanism avoids requiring clients to download every message in the mailbox in order to perform these searches.

Reflecting the experience of earlier Internet protocols, IMAP4 defines an explicit mechanism by which it may be extended. Many IMAP4 
extensions
 to the base protocol have been proposed and are in common use. IMAP2bis did not have an extension mechanism, and POP now has one defined by 
.mw-parser-output cite.citation{font-style:inherit}.mw-parser-output .citation q{quotes:"\"""\"""'""'"}.mw-parser-output .id-lock-free a,.mw-parser-output .citation .cs1-lock-free a{background-image:url("//upload.wikimedia.org/wikipedia/commons/thumb/6/65/Lock-green.svg/9px-Lock-green.svg.png");background-image:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/6/65/Lock-green.svg");background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .id-lock-limited a,.mw-parser-output .id-lock-registration a,.mw-parser-output .citation .cs1-lock-limited a,.mw-parser-output .citation .cs1-lock-registration a{background-image:url("//upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Lock-gray-alt-2.svg/9px-Lock-gray-alt-2.svg.png");background-image:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/d/d6/Lock-gray-alt-2.svg");background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .id-lock-subscription a,.mw-parser-output .citation .cs1-lock-subscription a{background-image:url("//upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Lock-red-alt-2.svg/9px-Lock-red-alt-2.svg.png");background-image:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/a/aa/Lock-red-alt-2.svg");background-repeat:no-repeat;background-size:9px;background-position:right .1em center}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration{color:#555}.mw-parser-output .cs1-subscription span,.mw-parser-output .cs1-registration span{border-bottom:1px dotted;cursor:help}.mw-parser-output .cs1-ws-icon a{background-image:url("//upload.wikimedia.org/wikipedia/commons/thumb/4/4c/Wikisource-logo.svg/12px-Wikisource-logo.svg.png");background-image:linear-gradient(transparent,transparent),url("//upload.wikimedia.org/wikipedia/commons/4/4c/Wikisource-logo.svg");background-repeat:no-repeat;background-size:12px;background-position:right .1em center}.mw-parser-output code.cs1-code{color:inherit;background:inherit;border:inherit;padding:inherit}.mw-parser-output .cs1-hidden-error{display:none;font-size:100%}.mw-parser-output .cs1-visible-error{font-size:100%}.mw-parser-output .cs1-maint{display:none;color:#33aa33;margin-left:0.3em}.mw-parser-output .cs1-subscription,.mw-parser-output .cs1-registration,.mw-parser-output .cs1-format{font-size:95%}.mw-parser-output .cs1-kern-left,.mw-parser-output .cs1-kern-wl-left{padding-left:0.2em}.mw-parser-output .cs1-kern-right,.mw-parser-output .cs1-kern-wl-right{padding-right:0.2em}.mw-parser-output .citation .mw-selflink{font-weight:inherit}
RFC
 
2449
.

While IMAP remedies many of the shortcomings of POP, this inherently introduces additional complexity. Much of this complexity (e.g., multiple clients accessing the same mailbox at the same time) is compensated for by 
server-side
 workarounds such as 
Maildir
 or database backends.

The IMAP specification has been criticised for being insufficiently strict and allowing behaviours that effectively negate its usefulness. For instance, the specification states that each message stored on the server has a "unique id" to allow the clients to identify messages they have already seen between sessions. However, the specification also allows these UIDs to be invalidated with no restrictions, practically defeating their purpose.
[15]


Unless the mail storage and searching algorithms on the server are carefully implemented, a client can potentially consume large amounts of server resources when searching massive mailboxes.

IMAP4 clients need to maintain a TCP/IP connection to the IMAP server in order to be notified of the arrival of new mail. Notification of mail arrival is done through 
in-band signaling
, which contributes to the complexity of client-side IMAP protocol handling somewhat.
[16]
 A private proposal, 
push IMAP
, would extend IMAP to implement 
push e-mail
 by sending the entire message instead of just a notification. However, push IMAP has not been generally accepted and current IETF work has addressed the problem in other ways (see the 
Lemonade Profile
 for more information).

Unlike some proprietary protocols which combine sending and retrieval operations, sending a message and saving a copy in a server-side folder with a base-level IMAP client requires transmitting the message content twice, once to SMTP for delivery and a second time to IMAP to store in a sent mail folder. This is addressed by a set of extensions defined by the IETF 
Lemonade Profile
 for mobile devices: URLAUTH (
RFC
 
4467
) and CATENATE (
RFC
 
4469
) in IMAP and BURL (
RFC
 
4468
) in SMTP-SUBMISSION. In addition to this, 
Courier Mail Server
 offers a non-standard method of sending using IMAP by copying an outgoing message to a dedicated outbox folder.
[17]


To cryptographically protect IMAP connections, IMAPS on TCP port 993 can be used, which utilizes 
TLS
. As of 
RFC 8314
, this is the recommended mechanism.

Alternatively, 
STARTTLS
 can be used to provide secure communications between the 
MUA
 communicating with the 
MSA
 or 
MTA
 implementing the 
SMTP Protocol
.

This is an example IMAP connection as taken from 
RFC 3501 section 8
:
